name: Python CI

on:
  push:
    branches: [ main ] # Adjust if your main branch is different (e.g., master)
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '**/*.rst'
  pull_request:
    branches: [ main ] # Adjust if your main branch is different
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '**/*.rst'

# Ensure only a single workflow run per PR or branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'src/**'
              - 'tests/**'
              - 'pyproject.toml'
              - 'requirements.lock'
              - '.github/workflows/**'

  check-comments:
    runs-on: ubuntu-latest
    outputs:
      only_comments: ${{ steps.comment_check.outputs.only_comments }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect comment-only changes
        id: comment_check
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
        run: python scripts/only_comments_changed.py

  build:
    needs: [changes, check-comments]
    if: needs.changes.outputs.src == 'true' && needs['check-comments'].outputs.only_comments != 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('requirements.lock') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.lock
        pip install ruff

    - uses: pre-commit/action@v3

    - name: Run unit tests
      run: |
        python -m pip install pytest pytest-cov
        pytest --cov=src --cov-config=.coveragerc -vv
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
